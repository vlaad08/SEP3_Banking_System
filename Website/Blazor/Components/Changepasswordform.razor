@using System.Security.Claims
@using Blazor.Services
@using Domain.DTOs
@using global::Shared.Models
@using Newtonsoft.Json
@using System.Data.Common
@using Blazor.Services.Http
@inject ISettingsService settingsService
@inject IAuthService AuthService
@inject NavigationManager NavMgr



<div class="content">
    
    <div class="card">
        f
        <div>
            <label>Type your new password </label>
            <input type="password" placeholder="New password" @bind="newpass">
        </div>
         <div>
                    <label>Confirm your new password </label>
                    <input type="password" placeholder="Confirm new password" @bind="newpass1" >
                </div>
        <div class="changeButton">
            <button @onclick="UpdatePass" >Change password</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public ClaimsPrincipal User { get; set; }
    [Parameter]public LoadingBox Loading { get; set; }
    [Parameter] public string Id { get; set; }
    private List<AccountsInfo> Users { get; set; }
    private Notification errorRef;
    private string email;
    private string newpass;
    private string newpass1;


    
    protected override async Task OnInitializedAsync()
    {

        Users = await GetUserAccounts(User);
        Id = User.FindFirst("Id").Value;
    }
    private Task<List<AccountsInfo>> GetUserAccounts(ClaimsPrincipal user)
    {
        var accountsClaim = user.FindFirst("Accounts");

        try
        {
            List<AccountsInfo> accounts = JsonConvert.DeserializeObject<List<AccountsInfo>>(accountsClaim!.Value)!;
            return Task.FromResult(accounts);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
    
    private async Task UpdatePass()
    {
        if (newpass.Equals(newpass1))
        {
            try
            {
                UserNewPasswordDTO userNewPasswordDto = new UserNewPasswordDTO(int.Parse(Id), newpass1);
                await settingsService.UpdatePassword(userNewPasswordDto);
                await AuthService.LogoutAsync();
            NavMgr.NavigateTo("/");
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }
            
        }
        else
        {
            await errorRef.ShowErrorNotification("Please fill out all the fields correctly");

        }
        
        
    }
}
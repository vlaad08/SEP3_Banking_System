@using global::Shared.DAO
@using Blazor.Components

<!-- Maybe have a search bar over here, to look for some transactions made to/from a specific person/merchant -->

<div class="content">
    
    <div class="card">
        <div class="search-bar">
            <input type="text" placeholder="Looking for a transaction" class="s">
        </div>
        
        <div class="transactions-list">
            @foreach( var transaction in transactions)
            {
                <Transaction Recipient="@transaction.RecipientAccountNumber"
                             Sender="@transaction.SenderAccountNumber"
                             Message="@transaction.Message"
                             Amount="@transaction.Amount"
                             Date="@transaction.Date"></Transaction>
            }
        </div>
    </div>
</div>


@code {
    
    public List<TransactionDao>? transactions; 

    
    //add the code to request the list
    private async Task RequestInformation()
    {
        transactions = await GetTransactions();
    }

    private async Task<List<TransactionDao>> GetTransactions()
    {
        var transaction1 = new TransactionDao()
        {
            Amount = 100,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "For the food",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaabbbbccccdddd"
        };var transaction2 = new TransactionDao()
        {
            Amount = 100,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Deposit",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };var transaction4 = new TransactionDao()
        {
            Amount = 1,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Interest",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };

        var transaction5 = new TransactionDao()
        {
            Amount = 1,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Interest",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };var transaction6 = new TransactionDao()
        {
            Amount = 1,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Interest",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };var transaction7 = new TransactionDao()
        {
            Amount = 1,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Interest",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };var transaction8 = new TransactionDao()
        {
            Amount = 1,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Interest",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };var transaction3 = new TransactionDao()
        {
            Amount = 1,
            Date = new DateTime(2023, 12, 1, 13, 00, 00),
            Message = "Interest",
            RecipientAccountNumber = "aaaaccccddddbbbb",
            SenderAccountNumber = "aaaaccccddddbbbb"
        };
        
        
        List<TransactionDao> list = new List<TransactionDao>();
        list.Add(transaction1);
        list.Add(transaction2);
        list.Add(transaction3);
        list.Add(transaction4);
        list.Add(transaction5);
        list.Add(transaction6);
        list.Add(transaction7);
        list.Add(transaction8);

        return list;

    }


    protected override async Task OnInitializedAsync()
    {
        await RequestInformation();
    }
}
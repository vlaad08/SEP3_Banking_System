@using Blazor.Services.Http
@using System.Security.Claims
@using global::Shared.Models
@using Newtonsoft.Json
@inject NavigationManager navMgr
@inject ITransactionService transactioService

<div class="content">
    
    <div class="card">
        <div>
            <label>Your account: </label>
            <select @onchange="OnAccountSelectionChanged">
                @foreach (var account in Accounts)
                {
                    <option value="@account.AccountNumber">@account.Balance DKK - @account.AccountType</option>
                }
            </select>
        </div>
        <div>
            <label>Card number: </label>
            <input type="text">
        </div>
        <div>
            <label>Amount: </label>
            <input type="number" placeholder="Amount in Danish Krone" @bind="amount">
        </div>
        <div class="submitButton">
            <button @onclick="Create">Top Up</button>
        </div>
    </div>
</div>

@code
{
    [Parameter] public ClaimsPrincipal User { get; set; }
    private string accountNumber;
    private double amount;
    private List<AccountsInfo> Accounts { get; set; } 
    
    private async Task Create()
    {
        try
        {
            Console.WriteLine(accountNumber + " " + amount);
            await transactioService.deposit(accountNumber, amount);
        }
        catch (Exception e)
        {
            throw e;
        }
    }
    
    private Task OnAccountSelectionChanged(ChangeEventArgs e)
    {
        accountNumber = e.Value!.ToString()!;
        return Task.CompletedTask;
    }
    
    protected override async Task OnInitializedAsync()
    {
        Accounts = await GetUserAccounts(User);
    }
    
    private Task<List<AccountsInfo>> GetUserAccounts(ClaimsPrincipal user)
    {
        var accountsClaim = user.FindFirst("Accounts");

        try
        {
            List<AccountsInfo> accounts = JsonConvert.DeserializeObject<List<AccountsInfo>>(accountsClaim!.Value)!;
            accountNumber = accounts.FirstOrDefault(a => a.AccountType.Equals("personal")).AccountNumber;
            return Task.FromResult(accounts);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}
@using System.Security.Claims
@using global::Shared.Models
@using Newtonsoft.Json
@inject Services.Http.LoanService loanService

<div class="content">
    <div class="card">
        <div>
            <select @bind="SelectedAccount">
                @foreach (var account in Accounts)
                {
                    if (!account.AccountType.Equals("savings"))
                    {
                        <option>@account.Balance DKK - @account.AccountType.ToUpperInvariant()</option>   
                    }
                    
                }
            </select>
        </div>
        <div>
            <label>Amount: </label>
            <input type="number" placeholder="Amount in Danish Krone" @bind="principle">
        </div>
        <div>
            <lable>Duration (in months): </lable>
            <input type="number" placeholder="Min. 6 - Max. 60" @bind="tenure">
        </div>
        <div class="submitButton">
            <button @onclick="Create">Request Loan</button>
        </div>
    </div>
</div>

@code {
    private string SelectedAccount { get; set; }
    [Parameter] public ClaimsPrincipal User { get; set; }
    private List<AccountsInfo> Accounts;
    private double principle;
    private int tenure;
    
    
    protected override async Task OnInitializedAsync()
    {
        Accounts = await GetUserAccounts(User);
    }

    private async void Create()
    {
        string interset = await loanService.LoanCalculation(principle, tenure);
        Console.WriteLine(interset);
    }
    
    private Task<List<AccountsInfo>> GetUserAccounts(ClaimsPrincipal user)
    {
        var accountsClaim = user.FindFirst("Accounts");

        try
        {
            List<AccountsInfo> accounts = JsonConvert.DeserializeObject<List<AccountsInfo>>(accountsClaim!.Value)!;
            return Task.FromResult(accounts);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

   
}
@using global::Shared.DAO
@using Blazor.Services.Http
@inject ITransactionService transactionService
@inject NavigationManager NavMgr
<!-- Visible on the same page with the it's information, the user can also see a couple of the recent transactions that he made i.e (payment, Deposit, top-up etc) -->


<div class="box">
    <div class="box-options">
        <p class="optionsText">Transactions</p>
        
        <!-- Select how many transactions you would like to see. Min 3 Max 7 -->
    </div>
    <div class="transactions-list">
        @if (transactions != null)
        {
            @foreach(var transaction in transactions)
            {
                <Transaction Recipient="@transaction.RecipientName"
                             Sender="@transaction.SenderName"
                             Message="@transaction.Message"
                             Amount="@transaction.Amount"
                             Date="@transaction.Date"></Transaction>
            }
        }
    </div>
    <div class="box-transactions">
        <button class="transactionsButton" @onclick="GoToTransactions">See all</button>
    </div>
</div>



<!-- We can move this code in the main file that uses this component and the UserDetails one, because the methods look quite the same, and the parse
the results in the components-->
@code {
    [Parameter] public string Email { get; set; }
    [Parameter] public LoadingBox Loading { get; set; }
    
    

    public List<TransactionDao> transactions = new List<TransactionDao>(); 

    private async Task RequestInformation()
    {
        transactions = await GetTransactions(Email) ?? new List<TransactionDao>(); 
    }

    private async Task<List<TransactionDao>> GetTransactions(string email)
    {
        return await transactionService.GetTransactions(email);
    }

    private void GoToTransactions()
    {
        Loading.ShowLoading();
        NavMgr.NavigateTo("/transactions");
    }
    

    protected override async Task OnInitializedAsync()
    {
        Loading.ShowLoading();
        await RequestInformation();
        Loading.CloseLoading();
    }
}